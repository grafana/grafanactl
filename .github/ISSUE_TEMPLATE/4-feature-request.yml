name: âœ¨ Feature Request
description: Suggest a completely new capability or feature
title: "[Feature]: "
labels: ["type/feature", "action/needs-triage"]
body:
  - type: markdown
    attributes:
      value: |
        Have an idea for something new? We'd love to hear it! Help us understand your vision.

  - type: textarea
    id: problem_to_solve
    attributes:
      label: What problem would this solve?
      description: Describe the challenge or limitation you're facing
      placeholder: |
        We need to manage datasources across multiple Grafana instances, but
        grafanactl doesn't currently support datasource resources. We have to
        manually configure datasources through the Grafana UI or use direct API
        calls, which makes it impossible to version-control our datasource configs.
    validations:
      required: true

  - type: textarea
    id: proposed_solution
    attributes:
      label: Describe your ideal solution
      description: How would this work from your perspective as a user?
      placeholder: |
        I'd like to be able to use grafanactl resources commands with datasources:
        - `grafanactl resources list datasources` - list all datasources
        - `grafanactl resources get datasource/<name>` - get a specific datasource
        - `grafanactl resources pull datasources` - export to local YAML/JSON files
        - `grafanactl resources push datasources/` - create/update from files
        - `grafanactl resources delete datasource/<name>` - remove a datasource

        This would work just like it does for dashboards and folders today.
    validations:
      required: true

  - type: textarea
    id: user_story
    attributes:
      label: Who would benefit and how?
      description: Help us understand the impact
      placeholder: |
        As a platform engineer, I want to manage datasources alongside dashboards
        so that our entire Grafana configuration can be version-controlled.

        This would help any team practicing GitOps or infrastructure-as-code.
        DevOps teams managing multiple Grafana instances would especially benefit.

  - type: textarea
    id: alternatives_considered
    attributes:
      label: Have you tried any workarounds?
      description: What do you do today to solve this problem?
      placeholder: |
        We currently use direct API calls with curl or custom scripts, but it's error-prone
        and doesn't integrate with our existing grafanactl workflows. We also looked at
        Terraform, but prefer to keep everything in grafanactl for consistency.

  - type: dropdown
    id: priority
    attributes:
      label: How important is this to you?
      options:
        - Critical - Blocking my work
        - High - Significantly limiting what I can do
        - Medium - Would improve my workflow
        - Low - Nice to have someday
    validations:
      required: true

  - type: textarea
    id: success_criteria
    attributes:
      label: How would you know this is working well?
      description: What would success look like?
      placeholder: |
        - Can list all datasources with `grafanactl resources list datasources`
        - Can pull datasources to local files for version control
        - Can push datasources from files to recreate them on new instances
        - Commands work consistently with other resource types (dashboards, folders)
        - Supports all Grafana datasource types (Prometheus, Loki, etc.)